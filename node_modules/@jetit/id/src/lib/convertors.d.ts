import { REPRESENTATION_TYPE, RETURN_KEY_TYPE } from './types';
export declare function binaryIDToDecimal(value: string): bigint;
export declare function binaryIDToHex(value: string): string;
export declare function binaryIDToString(value: string): string;
export declare function binaryIDToURLSafe(value: string): string;
export declare function convertRepresentationToBinary<T extends REPRESENTATION_TYPE>(id: RETURN_KEY_TYPE<T>, representation: T, typeIdentifier?: string): string;
export declare function clientIdFromBinary(id: string): string;
export declare function convertClientIdToBinary(value: string): string;
export declare function convertTimestampToBinary(value: number, length?: number): string;
export declare function convertHexToBinary(value: string, length?: number): string;
export declare function convertBinaryToNumber(value: string): bigint;
export declare function binaryToHex(value: string): string;
export declare function calculateTypeIdentifier(idInBinary: string): string;
