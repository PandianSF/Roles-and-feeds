"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getJulianDay = exports.getJulianDate = exports.generateShortClientId = exports.getSequenceNumberInBits = exports.checkIdLength = exports.isHexByte = exports.isNumeric = exports.generateClientId = void 0;
const nanoid_1 = require("nanoid");
const constants_1 = require("./constants");
function generateClientId() {
    return (0, nanoid_1.customAlphabet)('0123456789ABCDEFGHJKMNPQRSTVW', 4)();
}
exports.generateClientId = generateClientId;
function isNumeric(value) {
    return !isNaN(value - parseFloat(value));
}
exports.isNumeric = isNumeric;
function isHexByte(value) {
    return /^[0-9A-F]{2}$/i.test(value);
}
exports.isHexByte = isHexByte;
function checkIdLength(value) {
    return value.length === 64 || value.length === 72;
}
exports.checkIdLength = checkIdLength;
function getSequenceNumberInBits(value) {
    return value.toString(2).padStart(7, '0');
}
exports.getSequenceNumberInBits = getSequenceNumberInBits;
function generateShortClientId() {
    return (0, nanoid_1.customAlphabet)('0123456789ABCDEF', 2)();
}
exports.generateShortClientId = generateShortClientId;
function getJulianDate(date = new Date()) {
    return `${date.getFullYear() % 100}${getJulianDay()}`;
}
exports.getJulianDate = getJulianDate;
function getJulianDay(date = new Date()) {
    const month = date.getMonth();
    const day = date.getDate() - 1;
    const isLeap = checkLeapYear(date.getFullYear());
    return `${(isLeap ? constants_1.LEAPYEAR : constants_1.PERPETUAL)[month][day]}`.padStart(3, '0');
}
exports.getJulianDay = getJulianDay;
function checkLeapYear(year) {
    if ((0 == year % 4 && 0 != year % 100) || 0 == year % 400)
        return true;
    return false;
}
//# sourceMappingURL=utils.js.map